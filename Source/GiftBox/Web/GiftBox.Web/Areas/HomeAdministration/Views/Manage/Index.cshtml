@using GiftBox.Web.Areas.HomeAdministration.ViewModels.Categories
@using GiftBox.Web.Areas.HomeAdministration.ViewModels.Children
@using GiftBox.Web.Areas.HomeAdministration.ViewModels.Gift
@using GiftBox.Web.Areas.HomeAdministration.ViewModels.Needs
@using GiftBox.Web.Infrastructure.HtmlHelpers

@{
    ViewBag.Title = "Index";
}

<div class="col s12 m8 l9">

    <div class="row">
        <div class="container">
            <ul class="tabs tab-demo z-depth-2" style="width: 100%;">
                <li class="tab col s4">
                    <a class="active" href="#test1">Manage Children</a>
                </li>
                <li class="tab col s4">
                    <a href="#test2" class="">Manage Gifts</a>
                </li>
                <li class="tab col s4">
                    <a href="#test3" class="">Manage Needs</a>
                </li>
                <div class="indicator" style="right: 598px; left: 0px;"></div>
                <div class="indicator" style="right: 598px; left: 0px;"></div>
            </ul>
        </div>
        <div class="col s12">
            <div id="test1" class="col s12" style="display: block;">
                <div class="card-panel hoverable">
                    @(Html.FullFeaturedGrid<DisplayChildViewModel>("childGrid", "Manage", "Childs", "ReadChild", "CreateChild", "UpdateChild", "DeleteChild",
                          model =>
                          {
                              model.Id(m => m.Id);
                          },
                          cols =>
                          {
                              cols.Bound(c => c.HomeName);
                              cols.Bound(c => c.Name);
                              cols.Bound(c => c.Age);
                              cols.Command(command =>
                              {
                                  command.Destroy();
                              });
                          }))
                </div>
            </div>
            <div id="test2" class="col s12" style="display: none;">
                <div class="card-panel hoverable">
                    @(Html.FullFeaturedGrid<DisplayGiftViewModel>("giftsGrid", "Manage", "Gifts", "ReadGifts", "CreateGift", "UpdateGift", "DeleteGift",
                          model =>
                          {
                              model.Id(m => m.Id);
                              model.Field(m => m.Child).DefaultValue(
                                  ViewData["defaultChild"] as DisplayChildViewModel);
                              model.Field(m => m.EventCategory).DefaultValue(
                                  ViewData["defaultEventCategory"] as DisplayEventCategoryViewModel);
                          },
                          cols =>
                          {
                              cols.Bound(c => c.Child).ClientTemplate("#=Child.Name#").Width(120);
                              cols.Bound(c => c.EventCategory).ClientTemplate("#=EventCategory.Name#").Width(120);
                              cols.Bound(c => c.AditionalInfo).Width(300);
                              cols.Bound(c => c.ExpirationDate).Width(120);
                              cols.Bound(c => c.IsFulfilled).Width(120);
                              cols.Bound(c => c.Claimed).Width(120);
                              cols.Bound(c => c.ClaimedBy).Width(120);
                              cols.Command(command =>
                              {
                                  command.Destroy();
                              }).Width(120);
                          }
                          ))
                </div>
            </div>
            <div id="test3" class="col s12" style="display: none;">
                <div class="card-panel hoverable">
                    @(Html.FullFeaturedGrid<DisplayNeedViewModel>("needsGrid", "Manage", "Needs", "ReadNeed", "CreateNeed", "UpdateNeed", "DeleteNeed",
                          model =>
                          {
                              model.Id(m => m.Id);
                              model.Field(m => m.NeedCategory).DefaultValue(
                                  ViewData["defaultNeedCategory"] as DisplayNeedCategoryViewModel);
                          },
                          cols =>
                          {
                              cols.Bound(c => c.HomeName).Width(120);
                              cols.Bound(c => c.Description).Width(300);
                              cols.Bound(c => c.NeedCategory).ClientTemplate("#=NeedCategory.Name#").Width(120);
                              cols.Bound(c => c.IsFulFilled).Width(120);
                              cols.Bound(c => c.ImageUrl).Width(120);
                              cols.Command(command =>
                              {
                                  command.Destroy();
                              }).Width(120);
                          }
                          ))
                </div>
            </div>
        </div>
    </div>

</div>

@section kendo{
    @Styles.Render("~/Content/kendo/css")
    @Scripts.Render("~/bundles/kendo")
}

@section scripts{
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
}
